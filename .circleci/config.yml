version: 2
jobs:
  tests:
    docker:
    - image: python:3
    steps:
    - checkout
    - run:
        name: Setup testing environment
        command: |
          pip install --default-timeout=1000 --no-cache-dir -r requirements.txt
    - run:
        name: run tests
        command: |
          mkdir test-results
          pytest --verbose --no-header --junit-xml=test-results/junit.xml
    - store_test_results:
        path: test-results/junit.xml
    - store_artifacts:
        path: test-results
    - run:
        name: Run coverage
        command: |
          coverage run -m pytest
          coverage report
          coverage html
    - store_artifacts:
        path: htmlcov
    - run:
        name: run linting and metrics
        command: |
          mkdir linter-reports
          flake8 -vv ./cli.py --format=pylint  --output-file linter-reports/linter.txt || cat linter-reports/linter.txt && echo "Yes, I know my mistakes, please don't break :("
    - store_artifacts:
        path: linter-reports    
  deploy:
    machine: true
    steps:
      - checkout
      - run: 
          name: Login to DockerHub
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      # build the application image
      - run: 
          name: Build Application Image
          command: |
            docker build -t cnsn/marvel:latest. 
      # deploy the image
      - run:
          name: Deploy Application Image 
          command: |
            docker push cnsn/marvel:latest

workflows:
  version: 2
  test-build-deploy:
    jobs:
    - tests
    - deploy:
        requires: 
          - tests